SET SCHEMA FN71959@

CREATE OR REPLACE PROCEDURE FINDNUMBEROFSPECIES(IN P_SPECIES ANCHOR ANIMALS.SPECIES, IN P_BRANCH_NAME ANCHOR BRANCHES.NAME, OUT V_COUNT INT)
LANGUAGE SQL
BEGIN

	DECLARE COUNTCURSOR CURSOR FOR SELECT COUNT(*) FROM ANIMALS AN, SERVES SRV WHERE AN.CODE = SRV.ANIMAL_CODE 
																				AND AN.SPECIES = P_SPECIES AND SRV.BRANCH_NAME = P_BRANCH_NAME;
	
	DECLARE EXIT HANDLER FOR NOT FOUND
	BEGIN
		SET V_COUNT = 0;
	END;
	
	OPEN COUNTCURSOR;
	FETCH COUNTCURSOR INTO V_COUNT;
	CLOSE COUNTCURSOR;
	
END@

CALL FN71959.FINDNUMBEROFSPECIES('куче', 'Пухкав свят - София', ?)@
CALL FN71959.FINDNUMBEROFSPECIES('куче', 'Ново име', ?)@
CALL FN71959.FINDNUMBEROFSPECIES('октопод', 'Пухкав свят - Варна', ?)@



CREATE OR REPLACE PROCEDURE INFORMATIONEMPLOYEES(IN P_BRANCH_NAME ANCHOR BRANCHES.NAME)
RESULT SETS 1
LANGUAGE SQL
BEGIN

	DECLARE BRANCH_NAME_EXISTS INT;
	DECLARE OVERFLOW CONDITION FOR SQLSTATE '80000';
	DECLARE INFORMATIONCURSOR CURSOR WITH RETURN FOR SELECT * FROM STAFF WHERE BRANCH_NAME = P_BRANCH_NAME;
	
	DECLARE EXIT HANDLER FOR OVERFLOW
	BEGIN
		RESIGNAL SQLSTATE '80000' SET MESSAGE_TEXT='There is no branch with such a name!';
	END;
	
	SELECT COUNT(*) INTO BRANCH_NAME_EXISTS FROM BRANCHES WHERE NAME = P_BRANCH_NAME;
	
	IF BRANCH_NAME_EXISTS = 0 THEN
		SIGNAL OVERFLOW;
	END IF;
	
	OPEN INFORMATIONCURSOR;

END@

CALL FN71959.INFORMATIONEMPLOYEES('Пухкав свят - София')@
CALL FN71959.INFORMATIONEMPLOYEES('Ново име')@



CREATE TABLE NECESSARYVISITS
(
	ANIMAL_CODE VARCHAR(12) NOT NULL,
	CLIENT_PHONE VARCHAR(10) NOT NULL
)@

CREATE OR REPLACE PROCEDURE CHECKFORNECESSARYVISITS(IN P_NUMBER_OF_MONTHS INT)
RESULT SETS 1
LANGUAGE SQL
BEGIN

	DECLARE SQLCODE INT;
	DECLARE RECORDINTABLE ANCHOR ROW ANIMALS;
	DECLARE ANIMALSCURSOR CURSOR FOR SELECT * FROM ANIMALS WHERE MONTH(CURRENT_DATE - ANIMALS.LAST_VISIT) >= P_NUMBER_OF_MONTHS;
	DECLARE OVERVIEW CURSOR WITH RETURN FOR SELECT * FROM NECESSARYVISITS;
	
	OPEN ANIMALSCURSOR;
	FETCH ANIMALSCURSOR INTO RECORDINTABLE;
	
	WHILE SQLCODE = 0 DO
		INSERT INTO NECESSARYVISITS(ANIMAL_CODE, CLIENT_PHONE) VALUES (RECORDINTABLE.CODE, RECORDINTABLE.CLIENT_PHONE);
		FETCH ANIMALSCURSOR INTO RECORDINTABLE;
	END WHILE;
	
	OPEN OVERVIEW;

END@

CALL FN71959.CHECKFORNECESSARYVISITS(8)@